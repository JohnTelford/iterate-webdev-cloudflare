{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Iterative website Development","text":""},{"location":"#introduction","title":"Introduction","text":"<p>This website discusses optimizing website development costs over the life time of project using Iterative Web Development technology .</p> <p>The principle of Iterative Website Development is to develop websites through repeated cycles (iterative) and in smaller portions at a time (incremental), enabling iterative development teams to independently take advantage of what was learned during development of earlier features or versions of the system.</p>"},{"location":"Iterative%20WebDev%20tools/","title":"Iterative Webdev Introduction Overview","text":""},{"location":"Iterative%20WebDev%20tools/#overview","title":"Overview","text":""},{"location":"Iterative%20WebDev%20tools/#this-website-discusses-optimizing-website-development-costs-over-the-life-time-of-project-using-iterative-web-development-technology","title":"This website discusses optimizing website development costs over the life time of project using Iterative Web Development technology .","text":""},{"location":"Iterative%20WebDev%20tools/#the-principle-of-iterative-website-development-is-to-develop-websites-through-repeated-cycles-iterative-and-in-smaller-portions-at-a-time-incremental-enabling-iterative-development-teams-to-independently-take-advantage-of-what-was-learned-during-development-of-earlier-features-or-versions-of-the-system","title":"The principle of Iterative Website Development is to develop websites through repeated cycles (iterative) and in smaller portions at a time (incremental), enabling iterative development teams to independently take advantage of what was learned during development of earlier features or versions of the system.","text":""},{"location":"Iterative%20WebDev%20tools/#iterative-development","title":"Iterative Development","text":""},{"location":"Iterative%20WebDev%20tools/#creating-and-maintaining-websites-that-meet-users-needs-are-complex-difficult-time-consuming-and-expensive","title":"Creating and maintaining websites that meet users needs are, complex, difficult, time consuming and expensive","text":""},{"location":"Iterative%20WebDev%20tools/#iterative-web-development-teams-working-together-help-optimizing-website-costs-and-lowering-the-difficulties-creating-websites","title":"Iterative web development teams working together help optimizing website costs and lowering the difficulties creating websites.","text":""},{"location":"Iterative%20WebDev%20tools/#_1","title":".","text":""},{"location":"Iterative%20WebDev%20tools/#this-is-done-by-developers-working-this-on-website-features-fixes-or-testing-developers-can-deploy-private-preview-internet-websites-with-their-changes-without-disturbing-other-developers-work-or-the-website-production-version-enabling-stakeholders-to-monitor-progress-and-quickly-give-feedback-speeding-up-the-development-process-this-greatly-simplifies-traditional-software-reviews","title":"This is done by developers working This on website features, fixes, or testing developers can deploy private Preview Internet websites with their changes, without disturbing other developers work or the website production version enabling stakeholders to monitor progress and quickly give feedback, speeding up the development process. This greatly simplifies traditional software reviews","text":""},{"location":"Iterative%20WebDev%20tools/#the-slightest-errors-during-development-will-require-defect-remediation-sometime-during-the-life-time-of-the-website-the-highest-cost-over-the-life-time-of-website-projects-is-remediating-defectscontent-and-software-defects-cost-less-when-found-early-during-development","title":"The slightest errors during development will require Defect Remediation sometime during the life time of the website. The highest cost over the life time of website projects is remediating defects.Content and software defects cost less when found early during development","text":""},{"location":"Iterative%20WebDev%20tools/#content-and-software-defects-cost-less-when-found-early-during-development","title":"Content and software defects cost less when found early during development.","text":""},{"location":"Iterative%20WebDev%20tools/#iterative-webdevs-tools","title":"Iterative Webdevs Tools","text":""},{"location":"Iterative%20WebDev%20tools/#git","title":"git","text":""},{"location":"Iterative%20WebDev%20tools/#jfdo","title":"jfdo","text":""},{"location":"Iterative%20WebDev%20tools/#github","title":"github","text":""},{"location":"Iterative%20WebDev%20tools/#material-mkdocs","title":"material mkdocs","text":""},{"location":"Iterative%20WebDev%20tools/#python","title":"python","text":""},{"location":"Iterative%20WebDev%20tools/#vscode","title":"vscode","text":""},{"location":"Iterative%20WebDev%20tools/#extensions","title":"extensions","text":""},{"location":"Iterative%20WebDev%20tools/#_2","title":"Iterative Webdev Introduction Overview","text":""},{"location":"Iterative%20WebDev%20tools/#cdn","title":"cdn","text":""},{"location":"Iterative%20WebDev%20tools/#terminals","title":"Terminals","text":""},{"location":"Iterative%20WebDev%20tools/#programming-languages","title":"Programming Languages","text":""},{"location":"Iterative%20WebDev%20tools/#markdown","title":"Markdown","text":""},{"location":"Iterative%20WebDev%20tools/#html","title":"HTML","text":""},{"location":"Iterative%20WebDev%20tools/#css","title":"CSS","text":""},{"location":"Iterative%20WebDev%20tools/#javascript","title":"JavaScript","text":""},{"location":"Iterative%20WebDev%20tools/#utilities","title":"Utilities","text":""},{"location":"Iterative%20WebDev%20tools/#distributed-version-control","title":"Distributed Version Control","text":""},{"location":"Iterative%20WebDev%20tools/#git_1","title":"git","text":""},{"location":"Iterative%20WebDev%20tools/#git-is-a-distributed-version-control-system-that-tracks-changes-in-files-allowing-multiple-users-to-collaborate-on-software-projects-it-was-created-by-linus-torvalds-in-2005-and-is-primarily-developed-on-linux-although-it-supports-most-major-operating-systems-including-windows-macos-and-bsds","title":"Git is a distributed version control system that tracks changes in files, allowing multiple users to collaborate on software projects. It was created by Linus Torvalds in 2005 and is primarily developed on Linux, although it supports most major operating systems including Windows, macOS, and BSDs.","text":"<p>Each Git working directory is a full-fledged repository with complete history and full version-tracking capabilities, independent of network access or a central server.Some frequently used Git commands include:   git init: Create a new Git repository   git clone [URL]: Clone an existing repository from a URL   git add [file]: Add a file to the staging area   git commit -m \"[message]\": Commit staged changes with a message   git push: Upload local commits to a remote repository   git pull: Fetch and merge changes from a remote repository</p>"},{"location":"Iterative%20WebDev%20tools/#github_1","title":"GitHub","text":""},{"location":"Iterative%20WebDev%20tools/#github-facilitates-collaboration-by-allowing-developers-to-fork-repositories-submit-pull-requests-and-review-each-others-code-it-also-supports-features-like-issues-milestones-and-project-boards-to-organize-and-track-work","title":"GitHub facilitates collaboration by allowing developers to fork repositories, submit pull requests, and review each other's code. It also supports features like issues, milestones, and project boards to organize and track work.","text":""},{"location":"Iterative%20WebDev%20tools/#complete-project-history","title":"Complete project history","text":""},{"location":"Iterative%20WebDev%20tools/#who-changes","title":"Who changes","text":"<ul> <li>What</li> <li>when</li> <li>where</li> <li>why</li> </ul>"},{"location":"Iterative%20WebDev%20tools/#single-project-repository","title":"Single project Repository","text":""},{"location":"Iterative%20WebDev%20tools/#team-members","title":"Team Members","text":"<ul> <li>make changes only to their forked copy  of their project repo </li> <li>change request</li> </ul>"},{"location":"Iterative%20WebDev%20tools/#repository-guardian","title":"Repository guardian","text":"<ul> <li>Pull Request from team members to possibly make changes to project repo</li> <li>alerts other team members </li> <li>interested team members can  Fetch to update their repo with proposed changes</li> <li>proposed changes and discussed</li> <li>Guardian works with interested team members </li> </ul>"},{"location":"Iterative%20WebDev%20tools/#entire-project","title":"Entire project","text":""},{"location":"Iterative%20WebDev%20tools/#define","title":"Define","text":""},{"location":"Iterative%20WebDev%20tools/#design","title":"Design","text":""},{"location":"Iterative%20WebDev%20tools/#develop","title":"Develop","text":""},{"location":"Iterative%20WebDev%20tools/#deploy","title":"Deploy","text":""},{"location":"Iterative%20WebDev%20tools/#testinf","title":"Testinf","text":""},{"location":"Iterative%20WebDev%20tools/#maintenance","title":"Maintenance","text":""},{"location":"Iterative%20WebDev%20tools/#dev-teams","title":"Dev Teams","text":""},{"location":"Iterative%20WebDev%20tools/#define_1","title":"Define","text":""},{"location":"Iterative%20WebDev%20tools/#design_1","title":"Design","text":""},{"location":"Iterative%20WebDev%20tools/#develop_1","title":"Develop","text":""},{"location":"Iterative%20WebDev%20tools/#maintain","title":"Maintain","text":""},{"location":"Iterative%20WebDev%20tools/#test","title":"Test","text":""},{"location":"Iterative%20WebDev%20tools/#teams","title":"Teams","text":""},{"location":"Iterative%20WebDev%20tools/#define-team-documents","title":"Define Team Documents","text":""},{"location":"Iterative%20WebDev%20tools/#prerequisitesdefining-website-prerequisites-is-the-first-steps-in-optimizing-website-costs-defining-websites-helps-teams-and-stakeholders-understand-the-project","title":"PrerequisitesDefining website prerequisites is the first steps in optimizing website costs Defining websites helps teams and Stakeholders understand the project.","text":""},{"location":"Iterative%20WebDev%20tools/#purpose","title":"Purpose","text":""},{"location":"Iterative%20WebDev%20tools/#funding","title":"Funding","text":""},{"location":"Iterative%20WebDev%20tools/#functionality","title":"Functionality","text":""},{"location":"Iterative%20WebDev%20tools/#stakeholders","title":"Stakeholders","text":""},{"location":"Iterative%20WebDev%20tools/#content","title":"Content","text":""},{"location":"Iterative%20WebDev%20tools/#the-musts-and-wants-features","title":"The Musts and Wants features","text":""},{"location":"Iterative%20WebDev%20tools/#design-team-documents","title":"Design Team Documents","text":""},{"location":"Iterative%20WebDev%20tools/#prerequisites","title":"Prerequisites","text":"<ul> <li>Decisions about Website Design</li> <li>Consistency</li> <li>Theme</li> <li>Color Scheme</li> <li>Typology</li> <li>Navigation</li> </ul>"},{"location":"Iterative%20WebDev%20tools/#user-interaction","title":"User Interaction","text":"<ul> <li>The core foundations of a user's website experience are:</li> <li>Fast - Website responds quickly to user interactions with smooth scrolling.</li> <li>Integrated - The website uses the full capabilities of the user device to create an experience true to the device.</li> <li>The website uses the full capabilities of the user device to create an experience true to the device</li> <li>Reliable - Loads quickly and reliably even in uncertain network conditions.</li> <li>Engaging - Keeps user coming back to a website</li> </ul>"},{"location":"Iterative%20WebDev%20tools/#develop-team-documents","title":"Develop Team Documents","text":""},{"location":"Iterative%20WebDev%20tools/#prerequisites_1","title":"Prerequisites","text":"<ul> <li>Decisions about resources required to transform the Define and Design work into a website and infrastructure</li> <li>Decisions about static site generator and programming tools</li> </ul>"},{"location":"Iterative%20WebDev%20tools/#translates-the-define-and-design-teams-processes-into-website-pages","title":"Translates the Define and Design teams processes into website pages","text":""},{"location":"Iterative%20WebDev%20tools/#uses-development-languages-to-create-website-material-such-as-text-graphics-and-abstract-logical-structures-these-languages-are-nonhuman-and-strict","title":"Uses development languages to create website material such as text, graphics, and abstract logical structures. These languages are nonhuman, and strict","text":""},{"location":"Iterative%20WebDev%20tools/#configures-and-uses-website-development-tools","title":"Configures and uses website development tools","text":""},{"location":"MindNode%20Define/","title":"Define Team Documents","text":""},{"location":"MindNode%20Define/#prerequisites","title":"Prerequisites","text":"<p>Defining website prerequisites is the first steps in optimizing website costs Defining websites helps teams and Stakeholders understand the project.</p> <ul> <li> <p>Purpose</p> </li> <li> <p>Funding</p> </li> <li> <p>Functionality</p> </li> <li> <p>Stakeholders</p> </li> <li> <p>Content</p> </li> <li> <p>The Musts and Wants features</p> </li> </ul>"},{"location":"MindNode%20Define/#design-team-documents","title":"Design Team Documents","text":""},{"location":"MindNode%20Define/#prerequisites_1","title":"Prerequisites","text":"<ul> <li>Decisions about Website Design</li> <li>Consistency</li> <li>Theme</li> <li>Color Scheme</li> <li>Typology</li> <li>Navigation</li> </ul>"},{"location":"MindNode%20Define/#user-interaction","title":"User Interaction","text":"<ul> <li>The core foundations of a user's website experience are:</li> <li>Fast - Website responds quickly to user interactions with smooth scrolling.</li> <li>Integrated - The website uses the full capabilities of the user device to create an experience true to the device.</li> <li>The website uses the full capabilities of the user device to create an experience true to the device</li> <li>Reliable - Loads quickly and reliably even in uncertain network conditions.</li> <li>Engaging - Keeps user coming back to a website</li> </ul>"},{"location":"MindNode%20Define/#develop-team-documents","title":"Develop Team Documents","text":""},{"location":"MindNode%20Define/#prerequisites_2","title":"Prerequisites","text":"<ul> <li>Decisions about resources required to transform the Define and Design work into a website and infrastructure</li> <li>Decisions about static site generator and programming tools</li> </ul>"},{"location":"MindNode%20Define/#translates-the-define-and-design-teams-processes-into-website-pages","title":"Translates the Define and Design teams processes into website pages","text":""},{"location":"MindNode%20Define/#uses-development-languages-to-create-website-material-such-as-text-graphics-and-abstract-logical-structures-these-languages-are-nonhuman-and-strict","title":"Uses development languages to create website material such as text, graphics, and abstract logical structures. These languages are nonhuman, and strict","text":""},{"location":"MindNode%20Define/#configures-and-uses-website-development-tools","title":"Configures and uses website development tools","text":""},{"location":"MindNode%20Desing/","title":"MindNode Desing","text":""},{"location":"MindNode%20Desing/#design-team-documents","title":"Design Team Documents","text":""},{"location":"MindNode%20Desing/#prerequisites","title":"Prerequisites","text":"<ul> <li>Decisions about Website Design</li> <li>Consistency</li> <li>Theme</li> <li>Color Scheme</li> <li>Typology</li> <li>Navigation</li> </ul>"},{"location":"MindNode%20Desing/#user-interaction","title":"User Interaction","text":"<ul> <li>The core foundations of a user's website experience are:</li> <li>Fast - Website responds quickly to user interactions with smooth scrolling.</li> <li>Integrated - The website uses the full capabilities of the user device to create an experience true to the device.</li> <li>The website uses the full capabilities of the user device to create an experience true to the device</li> <li>Reliable - Loads quickly and reliably even in uncertain network conditions.</li> <li>Engaging - Keeps user coming back to a website</li> </ul>"},{"location":"branch%20_and_build_controls/","title":"Branch  and build controls","text":"<p>Build and Branch Controls</p>"},{"location":"branch%20_and_build_controls/#branch-build-controls","title":"Branch build controls","text":"<p>When connected to your git source, Pages allows you to control which environments and branches you would like to automatically build. By default, Pages will trigger a build any time you commit to either your production or preview environment. However, with branch build controls, you can configure automatic deployments to suit your preference on a per project basis.</p>"},{"location":"branch%20_and_build_controls/#production-branch-control","title":"Production branch control","text":"<p>To configure deployment options, go to your Pages project &gt; Settings &gt; Builds &amp; deployments &gt; Configure Production deployments. Pages will default to setting your production environment to the branch you first push, but you can set your production to another branch if you choose.</p> <p>You can also enable or disable automatic deployment behavior on the production branch by checking the Enable automatic production branch deployments box. You must save your settings in order for the new production branch controls to take effect.</p>"},{"location":"branch%20_and_build_controls/#preview-branch-control","title":"Preview branch control","text":"<p>When configuring automatic builds for preview deployments, there are three options to choose from.</p> <p>All non-Production branches: By default, Pages will automatically deploy any and every commit to a preview branch. None: Turns off automatic builds for all preview branches. Custom branches: Customize the automatic deployments of certain preview branches.</p>"},{"location":"cdn_deploy/","title":"Cdn deploy","text":""},{"location":"cdn_deploy/#cdn-deployment","title":"CDN Deployment","text":"<p>A content delivery network (CDN) is a geographically distributed network of proxy servers and their data centers that provides high availability and performance by distributing the service spatially relative to end users.</p> <p>Mkdocs supports Cloudflare, GitHub Pages, Netlify, Vercel, and DCNs . I have used these and other other DCNs. My choice is Cloudflare. Cloudflare</p>"},{"location":"cdn_deploy/#cloudflare","title":"Cloudflare","text":"<ul> <li> <p>The Cloudflare global network runs every service in every data center so your users have a consistent experience everywhere \u2014 whether they are in Chicago or Cape Town. This means all customer traffic is processed at the data center closest to its source, with no backhauling or performance tradeoffs. And with single-pass inspection, security is streamlined and built-in.</p> </li> <li> <p>Cloudflare network is one of the biggest, most connected, and fastest in the world. It extends to more than 250 cities. In those cities, Cloudflare is often present in multiple data centers in order to connect to as many networks and bring  services as close to as many users as possible. </p> </li> <li> <p>95% of the entire Internet-connected world is now within 50 ms of a [Cloudflare](https://www.cloudflare.com) presence, and 80% of the entire Internet-connected world is within 20ms (for reference, it takes 300-400 ms for a human to blink):</p> </li> </ul> <p>This website is using [Cloudflare](https://www.cloudflare.com) Content Delivery Network (CDN), Domain Name System (DNS) and website deployment.</p> <p>Cloudflare builds websites and deploys them when VScode pushes changes from the Local Project Repository to the Central Project Repository, Cloudflare then automatically builds the website using MkDocs and deploys to the Internet.</p> <p>Benefits deploying projects with Cloudflare are:</p> <ul> <li>Zero Trust Security</li> <li>Performance</li> <li>Stability</li> </ul> <p>Features this author like are:</p> <ul> <li> <p>Zero Trust Security What is Zero Trust security?</p> </li> <li> <p>Automatic website deployment after a push to the GitHub repository branch. Team members may periodically Private Preview Website local repository to a private and secure website where stockholders view their work and give feedback. </p> </li> <li>Website builds are quick</li> <li>Previous deployments can be quickly redeploy</li> </ul>"},{"location":"cdn_deploy/#preview","title":"Preview","text":"<p>As team members makes changes to their repository clone, they may deploy their local cloned repository to a private Private Preview Website Internet website for stakeholders to quickly view and give feedback.</p> <p>The repository guardian and other team members evaluating pull requests may deploy them to a private Internet website for stakeholders to Private Preview Website and give feedback.</p> <p>When the pull request team and stakeholders are satisfied the updated production changes are ready for deployment, the repository guardian deploys the updated production version of the website to a private Private Preview Website Internet website for stakeholders to preview and give feedback. When the stakeholders are satisfied with the updated production version, the repository guardian deploys the updated production version of the website to the Internet</p>"},{"location":"command_and_control/","title":"Command and Control","text":"<p>Command and control are Team Members and the Repository Guardisn</p>"},{"location":"command_and_control/#team-members","title":"Team Members","text":"<ul> <li>Creates a <code>fork</code> repo of Remote Project Repository that resides on GitHub.</li> <li>clone the fork repo from GitGub to  workstation</li> <li>adds  a unique repo feature project branch</li> <li>begins designing a feature and begins initial implementation</li> <li>frequently does a pull request that informs others team members to discuss the feature and initial code</li> <li>other team members may give feedback about the design of the feature and inital code</li> <li>The team member discusss the feedback and maybe implement some of the suggested featuree.</li> <li>The team member make implemental changes the other team members see</li> </ul>"},{"location":"content_delivery_network/","title":"Content delivery network","text":""},{"location":"content_delivery_network/#cloudflare","title":"Cloudflare","text":"<ul> <li> <p>The Cloudflare global network runs every service in every data center so your users have a consistent experience everywhere \u2014 whether they are in Chicago or Cape Town. This means all customer traffic is processed at the data center closest to its source, with no backhauling or performance tradeoffs. And with single-pass inspection, security is streamlined and built-in.</p> </li> <li> <p>Cloudflare's network is one of the biggest, most connected, and fastest in the world. It extends to more than 250 cities. In those cities, we're often present in multiple data centers in order to connect to as many networks and bring our services as close to as many users as possible. </p> </li> <li> <p>95% of the entire Internet-connected world is now within 50 ms of a Cloudflare presence, and 80% of the entire Internet-connected world is within 20ms (for reference, it takes 300-400 ms for a human to blink):</p> </li> </ul>"},{"location":"content_delivery_network/#dns-resolver","title":"DNS Resolver","text":"<p>1.1.1.1 is Cloudflare\u2019s public DNS resolver. It offers a fast and Private way to browse the Internet. DNS resolversOpen external link translate domains like cloudflare.com into the IP addresses necessary to reach the website (like 104.16.123.96).</p> <p>Unlike most DNS resolvers like most ISPs, the 1.1.1.1 does not sell user data to advertisers. 1.1.1.1 has also been measured to be the fastest DNS resolver available</p>"},{"location":"content_delivery_network/#what-is-a-cdn","title":"What is a CDN?","text":"<p>What is a CDN?</p> <p>Cloudflare is a content delivery network (CDN) and security provider that helps speed up websites and protect them from malicious threats. It uses a distributed network of caching servers across the world to cache websites and minimize loading times, while also providing a range of security features such as DDoS protection and Web Application Firewall (WAF).</p>"},{"location":"content_delivery_network/#branch-build-controls","title":"Branch build controls","text":"<p>Branch build controls</p> <p>When connected to your Git source, Pages allows you to control which environments and branches you would like to automatically build. By default, Pages will trigger a build any time you commit to either your production or preview environment. However, with branch build controls, you can configure automatic deployments to suit your preference on a per project basis.</p>"},{"location":"content_delivery_network/#skip-builds","title":"Skip builds","text":"<p>Skip builds</p> <p>Without any configuration required, you can choose to skip a build and deployment on an adhoc basis. By adding the [CI Skip], [CI-Skip], [Skip CI], [Skip-CI] or [CF-Pages-Skip] flag as a prefix in your commit message, Pages will omit that build/deployment. The prefixes are case insensitive.</p>"},{"location":"content_delivery_network/#production-branch-control","title":"Production branch control","text":"<p>Production branch control</p> <p>To configure deployment options, go to your Pages project &gt; Settings &gt; Builds &amp; deployments &gt; Configure Production deployments. Pages will default to setting your production environment to the branch you first push, but you can set your production to another branch if you choose.</p>"},{"location":"content_delivery_network/#preview-branch-control","title":"Preview branch control","text":"<p>Preview branch control</p> <p>When configuring automatic builds for preview deployments, there are three options to choose from.</p> <ul> <li>All non-Production branches: By default, Pages will automatically deploy any and every commit to a preview branch.</li> <li>None: Turns off automatic builds for all preview branches.</li> <li>Custom branches: Customize the automatic deployments of certain preview branches.</li> </ul>"},{"location":"content_delivery_network/#custom-preview-branch-control","title":"Custom preview branch control","text":"<p>https://developers.cloudflare.com/pages/platform/branch-build-controls/#custom-preview-branch-controlhttps://developers.cloudflare.com/pages/platform/branch-build-controls/#custom-preview-branch-control</p> <p>Custom preview branch control</p> <p>By selecting Custom branches, you can specify branches you wish to include and exclude from automatic deployments in the provided configuration fields. The configuration fields can be filled in two ways:</p> <ul> <li> <p>Static branch names: Enter the precise name of the branch you are looking to include or exclude (for example, staging or dev).</p> </li> <li> <p>Wildcard syntax: Use wildcards to match multiple branches. You can specify wildcards at the start or end of your rule. The order of execution for the configuration is:</p> <ul> <li>Excludes</li> <li>Includes</li> <li>Skip</li> </ul> </li> </ul> <p>Pages will process the exclude configuration first, then go to the include configuration. If a branch does not match either then it will be skipped.</p>"},{"location":"content_delivery_network/#wildcards","title":"Wildcards","text":"<p>Wildcards</p> <p>A wildcard (*) is a character that is used within rules. It can be placed alone to match anything or placed at the start or end of a rule to allow for better control over branch configuration. A wildcard will match zero or more characters.</p> <p>For example, if you wanted to match all branches that started with fix/ then you would create the rule fix/* to match strings like fix/1, fix/bugsor fix/.</p>"},{"location":"content_delivery_network/#preview-deployments","title":"Preview deployments","text":"<p>Preview Deployment</p> <p>Preview deployments allow you to preview new versions of your project without deploying it to production. To view preview deployments, navigate from the Account Home Pages and select your project</p>"},{"location":"content_delivery_network/#customizing-preview-deployments-access","title":"Customizing preview deployments access","text":"<p>Customizing preview deployments access</p> <p>You can use Cloudflare AccessOpen external link to manage access to your deployment previews. By default, these deployment URLs are public. Enabling the access policy will restrict viewing project deployments to your Cloudflare account.</p>"},{"location":"content_delivery_network/#preview-aliases","title":"Preview aliases","text":"<p>Preview aliases</p> <p>When a preview deployment is published, it is given a unique, hash-based address \u2014 for example, ..pages.dev. These are atomic and may always be visited in the future. However, Pages also creates an alias for Git branch\u2019s name and updates it so that the alias always maps to the latest commit of that branch."},{"location":"dev_stack/","title":"Dev Stack","text":"<p>Abstract</p> <p>The Iterative Website Development Stack outlines a process for building and launching websites, typically involving iteration and collaboration between development and design teams.</p> <p></p> <p>The iterative website development process uses core technologies:</p> <ul> <li> <p>Visual Studio Code is Team member's use thier Developers Integrated Development Environment (IDE) for developing documentation and software</p> </li> <li> <p>Git is the most widely used modern version control system in the world today</p> </li> <li> <p>GitHub hosts the Team members repositories and Reomte Projet Repository</p> </li> <li> <p>MkDocs static Site Generator is used to create local, private, and production websites</p> </li> <li> <p>Content Delivery Network is used to create local and Stakeholders Private Preview Website, and deploy the production website.</p> </li> </ul> <p>Each team member has a GitHub account and clone a copy fo the Central Project Repository to their workstation</p> <p>Changes made to the cloned repositories cannot directly affect the central repository, which is managed by a gatekeeper team member. It requires a Pull Request Review This helps maintain a unified source of truth for project history and files.</p> <ul> <li> <p>Developers use Visual Studio Code as their development environment</p> </li> <li> <p>Developers using Mkdocs to create Private Websites Preview for stakeholders.</p> </li> <li> <p>Developers commit their changes to the central website repository</p> </li> <li> <p>Developers request a GitHub Pull Request to merge their repository with the central project repository.</p> </li> <li> <p>Pull requests approved by the project gatekeeper are incorporated into the central repository</p> </li> <li> <p>Developers use pull to update their local repositories.</p> </li> <li> <p>A production website is created by the project gatekeeper when the stakeholders agree</p> </li> </ul> <p>Read About version control and Git </p> <ul> <li> <p>About repositories</p> </li> <li> <p>How GitHub works</p> </li> <li> <p>GitHub and the command line</p> </li> <li> <p>Models for collaborative development</p> </li> </ul>"},{"location":"dev_stack/#github","title":"GitHub","text":"<p>GitHub is a Distributed Version Control Systems enabling multiple teams to work separately on the same project without having an impact on the work of others. GitHub manages an online web hosted Central Website Repository containing all project files. It is a unified source of truth. It helps teams collaborate and maintain the entire history of project file changes, and helps answer the questions who changed what, where, when, and why for the lifetime of the project</p> <p>The core technology of Iterative Development is Git, GitHub, a central website repository controlled by a project gatekeeper, and a CDN like Cloudflare which deploys Private Websites Preview, production sites and individual team member's private previews.</p> <p>GitHub is a web-hosted VCS that helps teams collaborate on a project without affecting each other's work by having one central repository acting as the source of truth. Team members use the website dev stack to develop, deploy, and maintain sites using a central repository to avoid confusion/defects.</p> <p>Team members fork a copy of the central repo to their GitHub account, then make a clone on workstations to make changes. They cannot directly make changes to the central repo and commit to their own repo clone. Stakeholders determine when changes are ready, then developers open PRs to the central repository, which the gatekeeper merges after team agreement. The central repo is deployed to the Internet after sufficient testing.</p>"},{"location":"dev_stack/#github-central-repository","title":"GitHub Central Repository.","text":"<p>Iterative website development in teams uses Git, GitHub, and a central repository controlled by the project gatekeeper. The team members use the website development stack to develop, deploy, and maintain websites. Team members make changes to their local repository clone, commit changes to their local repository, and may deploy their local repository to a Private Websites Preview to get stakeholder feedback. A GitHub pull request is made when stakeholders determine the changes are ready, which is examined and tested before being committed to the central Mkdocs repository by the gatekeeper. Developers then pull the central repository changes and commit them to their local repository copy of the central project. After sufficient development and testing iterations, the gatekeeper deploys the central project repository to the public internet.</p>"},{"location":"dev_stack/#github-workflow","title":"GitHub Workflow","text":"<p>GitHub workflow uses the following steps for teams:</p> <p>Fork central repo to personal GitHub account Clone the forked repo to workstation Create topic branch from cloned repo Make changes and commits on topic branch Push topic branch to forked repo in GitHub account Regularly pull from central repo to get updated develop branch Occasionally deploy to Private Websites Preview for stakeholder feedback Open a Pull Request on forked repo for integrating local changes to central repo Team discusses, approves, and updates the Pull Request.---</p>"},{"location":"dev_stack/#mkdocs-material-static-site-generator","title":"MkDocs Material - Static Site Generator","text":"<p>Material for MkDocs</p> <p>A Mkdocs static site generator tools are used to create the \"Production Website\" by the \"CDN - Deploy Website to Web\"</p>"},{"location":"dev_stack_mindnode/","title":"Dev Stack","text":""},{"location":"draft_deploy/","title":"Draft deploy","text":""},{"location":"draft_deploy/#private-preview-website","title":"Private Preview Website","text":"<p>~~Private Preview Website created by a Content Delivery Network.~~ </p> <p>When team members make changes to their Local Website Repository, they may create a local Preview Website for themselves using their local copy of MkDocs.</p> <p>They may also create an Internet Private Preview Website for Stakeholders to quickly view and give feedback using the Content Delivery Network (CDN) Build and Branch Controls</p> <p>When connected to your git source, Pages allows you to control which environments and branches you would like to automatically build. By default, Pages will trigger a build any time you commit to either your production or preview environment. However, with branch build controls, you can configure automatic deployments to suit your preference on a per project basis.</p> <p>When team members and Stakeholders agree  changes are ready to be added to the Production Website,  team members  makes a GitHub Send Pull Request</p> <p>The repository guardian and other team members evaluating Central Website Repository Pull Requests, may deploy a Private Preview Website for Stakeholders holders to preview and give feedback.</p>"},{"location":"draft_deploy/#repository-guardian-preview","title":"Repository Guardian Preview","text":"<p>When the repository guardian and other team members evaluating Central Website Repository update requests changes are ready for deployment, the repository guardian deploys the updated production version of the website to a Private Preview Website for Stakeholders to preview and give feedback. When the Stakeholders are satisfied with the updated preview production version, the repository guardian deploys the updated production version of the website to the Internet</p> <p>A content delivery network (CDN) is a geographically distributed network of proxy servers and their data centers that provides high availability and performance by distributing the service spatially relative to end users.</p>"},{"location":"draft_deploy/#cloudflare","title":"Cloudflare","text":"<ul> <li> <p>The Cloudflare global network runs every service in every data center so your users have a consistent experience everywhere \u2014 whether they are in Chicago or Cape Town. This means all customer traffic is processed at the data center closest to its source, with no backhauling or performance tradeoffs. And with single-pass inspection, security is streamlined and built-in.</p> </li> <li> <p>Cloudflare's network is one of the biggest, most connected, and fastest in the world. It extends to more than 250 cities. In those cities, we're often present in multiple data centers in order to connect to as many networks and bring our services as close to as many users as possible. </p> </li> <li> <p>95% of the entire Internet-connected world is now within 50 ms of a Cloudflare presence, and 80% of the entire Internet-connected world is within 20ms (for reference, it takes 300-400 ms for a human to blink):</p> </li> </ul>"},{"location":"draft_deploy/#cloudflare_1","title":"Cloudflare","text":"<ul> <li> <p>The Cloudflare global network runs every service in every data center so your users have a consistent experience everywhere \u2014 whether they are in Chicago or Cape Town. This means all customer traffic is processed at the data center closest to its source, with no backhauling or performance tradeoffs. And with single-pass inspection, security is streamlined and built-in.</p> </li> <li> <p>Cloudflare network is one of the biggest, most connected, and fastest in the world. It extends to more than 250 cities. In those cities, Cloudflare is often present in multiple data centers in order to connect to as many networks and bring  services as close to as many users as possible. </p> </li> <li> <p>95% of the entire Internet-connected world is now within 50 ms of a [Cloudflare](https://www.cloudflare.com) presence, and 80% of the entire Internet-connected world is within 20ms (for reference, it takes 300-400 ms for a human to blink):</p> </li> </ul> <p>This website is using [Cloudflare](https://www.cloudflare.com) Content Delivery Network (CDN), Domain Name System (DNS) and website deployment.</p> <p>Cloudflare builds websites and deploys them when VScode pushes changes from the Local Project Repository to the Central Project Repository, Cloudflare then automatically builds the website using MkDocs and deploys to the Internet.</p> <p>Benefits deploying projects with Cloudflare are:</p> <ul> <li>Zero Trust Security</li> <li>Performance</li> <li>Stability</li> </ul> <p>Features this author like are:</p> <ul> <li> <p>Zero Trust Security What is Zero Trust security?</p> </li> <li> <p>Automatic website deployment after a push to the GitHub repository branch. Team members may periodically Private Preview Website local repository to a private and secure website where stockholders view their work and give feedback. </p> </li> <li>Website builds are quick</li> <li>Previous deployments can be quickly redeploy</li> </ul>"},{"location":"git/","title":"Git","text":"<p>Git is the most widely used modern version control system in the world today. Git is mature, actively maintained open source project originally developed in 2005 by Linus Torvalds, the famous creator of the Linux operating system kernel. A staggering number of software projects rely on Git for version control, including commercial projects as well as open source. Developers who have worked with Git are well represented in the pool of available software development talent and it works well on a wide range of operating systems and Integrated Development Environments such as VScode.</p> <p>Git Distributed Version Control System. Rather than have only one single place for the full version history of the software as in Git, every developer's working copy of the code is also a repository that can contain the full history of all changes.</p> <p>In addition to being distributed, Git has been designed with performance, security and flexibility in mind.</p>"},{"location":"git/#basic-git-commands","title":"Basic Git Commands","text":"<p>Basic Git Commands</p> <p>To use Git, developers use specific commands to copy, create, change, and combine code. These commands can be executed directly from the command line or by using an application like GitHub Desktop. Here are some common commands for using Git: --&gt;</p>"},{"location":"git/#init","title":"init","text":"<p><code>git init</code> initializes a brand new Git repository and begins tracking an existing directory. It adds a hidden subfolder within the existing directory that houses the internal data structure required for version control.</p>"},{"location":"git/#add","title":"add","text":"<p><code>git add</code> stages a change. Git tracks changes to a developer's codebase, but it's necessary to stage and take a snapshot of the changes to include them in the project's history. This command performs staging, the first part of that two-step process. Any changes that are staged will become a part of the next snapshot and a part of the project's history. Staging and committing separately gives developers complete control over the history of their project without changing how they code and work.</p>"},{"location":"git/#branch","title":"branch","text":"<p><code>git branch</code> shows the branches being worked on locally.</p>"},{"location":"git/#clone","title":"clone","text":"<p><code>git clone</code> creates a local copy of a project that already exists remotely. The clone includes all the project's files, history, and branches.</p>"},{"location":"git/#commit","title":"commit","text":"<p><code>git commit</code> saves the snapshot to the project history and completes the change-tracking process. In short, a commit functions like taking a photo. Anything that's been staged with git add will become a part of the snapshot with git commit.</p>"},{"location":"git/#fork","title":"fork","text":"<p>Fork in not a git command. It is a GitHub process. See:   </p> <ul> <li> <p>GitGub documentation About forks</p> </li> <li> <p>Git Documentation GitHub - Contributing to a Project</p> </li> </ul>"},{"location":"git/#merge","title":"merge","text":"<p><code>git merge</code> merges lines of development together. This command is typically used to combine changes made on two distinct branches. For example, a developer would merge when they want to combine changes from a feature branch into the main branch for deployment.</p>"},{"location":"git/#pull","title":"pull","text":"<p><code>pull</code> updates the local line of development with updates from its remote counterpart. Developers use this command if a teammate has made commits to a branch on a remote, and they would like to reflect those changes in their local environment.</p>"},{"location":"git/#push","title":"push","text":"<p><code>git push</code> updates the remote repository with any commits made locally to a branch.</p>"},{"location":"git/#status","title":"status","text":"<p><code>git status</code> shows the status of changes as untracked, modified, or staged.</p>"},{"location":"git/#switch","title":"switch","text":"<p><code>git switch</code> switch to a specified branch. The working tree and the index are updated to match the branch. All new commits will be added to the tip of this branch.</p>"},{"location":"git/#git-references","title":"Git References","text":""},{"location":"git/#git-book","title":"Git Book","text":"<p>Everything You need to know</p> <ul> <li> <p>Read online Git Book </p> </li> <li> <p>Download PDF book Git Book </p> </li> </ul> <p>Full Reference Guide To Git Commands</p>"},{"location":"git/#git-cheat-sheet","title":"Git Cheat Sheet","text":""},{"location":"git/#git-cheat-sheet_1","title":"Git Cheat Sheet","text":""},{"location":"git/#models-for-collaborative-development","title":"Models for collaborative development","text":"<p>Models for collaborative development</p>"},{"location":"git/#importing-a-git-repository-using-the-command-line","title":"Importing a Git repository using the command line","text":"<p>Importing a Git repository using the command line</p>"},{"location":"git_and_github/","title":"Git and github","text":"<p>Version control system records changes to files  over time so specific versions can be recalled later</p> <p>When teams make changes to project files, the version control system tracks the history of changes. Earlier version of project files can be recovered at any time.</p> <p>The version primary components are GigHub, Git, and VScode</p>"},{"location":"git_and_github/#github","title":"GitHub","text":"<p>GitHub is a Distributed Version Control Systems is a Microsoft product. It enabling multiple teams to work separately on the same project without having an impact on the work of others. GitHub manages an online web hosted Central Website Repository containing all project files. It is a unified source of truth. It helps teams collaborate and maintain the entire history of project file changes, and helps answer the questions who changed what, where, when, and why for the lifetime of the project</p> <p>About version control and Git</p>"},{"location":"git_and_github/#getting-started","title":"Getting Started","text":"<p>Getting Started</p>"},{"location":"git_and_github/#how-github-works","title":"How GitHub works","text":"<p>How GitHub works</p>"},{"location":"git_and_github/#git","title":"git","text":"<p>Git is the most widely used modern version control system in the world today. Git is mature, actively maintained open source project originally developed in 2005 by Linus Torvalds, the famous creator of the Linux operating system kernel. A staggering number of software projects rely on Git for version control, including commercial projects as well as open source. Developers who have worked with Git are well represented in the pool of available software development talent and it works well on a wide range of operating systems and Integrated Development Environments such as VScode.</p> <p>Git Distributed Version Control System. Rather than have only one single place for the full version history of the software as in Git, every developer's working copy of the code is also a repository that can contain the full history of all changes.</p> <p>In addition to being distributed, Git has been designed with performance, security and flexibility in mind.</p>"},{"location":"git_and_github/#basic-git-commands","title":"Basic Git Commands","text":"<p>Basic Git Commands</p> <p>To use Git, developers use specific commands to copy, create, change, and combine code. These commands can be executed directly from the command line or by using an application like GitHub Desktop. Here are some common commands for using Git:</p>"},{"location":"git_and_github/#git-init","title":"git init","text":"<p><code>git init</code> initializes a brand new Git repository and begins tracking an existing directory. It adds a hidden subfolder within the existing directory that houses the internal data structure required for version control.</p>"},{"location":"git_and_github/#git-clone","title":"git clone","text":"<p><code>git clone</code> creates a local copy of a project that already exists remotely. The clone includes all the project's files, history, and branches.</p>"},{"location":"git_and_github/#git-add","title":"git add","text":"<p><code>git add</code> stages a change. Git tracks changes to a developer's codebase, but it's necessary to stage and take a snapshot of the changes to include them in the project's history. This command performs staging, the first part of that two-step process. Any changes that are staged will become a part of the next snapshot and a part of the project's history. Staging and committing separately gives developers complete control over the history of their project without changing how they code and work.</p>"},{"location":"git_and_github/#git-commit","title":"git commit","text":"<p><code>git commit</code> saves the snapshot to the project history and completes the change-tracking process. In short, a commit functions like taking a photo. Anything that's been staged with git add will become a part of the snapshot with git commit.</p>"},{"location":"git_and_github/#git-status","title":"git status","text":"<p><code>git status</code> shows the status of changes as untracked, modified, or staged.</p>"},{"location":"git_and_github/#git-branch","title":"git branch","text":"<p><code>git branch</code> shows the branches being worked on locally.</p>"},{"location":"git_and_github/#git-merge","title":"git merge","text":"<p><code>git merge</code> merges lines of development together. This command is typically used to combine changes made on two distinct branches. For example, a developer would merge when they want to combine changes from a feature branch into the main branch for deployment.</p>"},{"location":"git_and_github/#git-pull","title":"git pull","text":"<p><code>git pull</code> updates the local line of development with updates from its remote counterpart. Developers use this command if a teammate has made commits to a branch on a remote, and they would like to reflect those changes in their local environment.</p>"},{"location":"git_and_github/#git-push","title":"git push","text":"<p><code>git push</code> updates the remote repository with any commits made locally to a branch.</p>"},{"location":"git_and_github/#full-reference-guide-to-git-commands","title":"Full Reference Guide To Git Commands","text":"<p>Full Reference Guide To Git Commands.</p>"},{"location":"git_and_github/#models-for-collaborative-development","title":"Models for collaborative development","text":"<p>Models for collaborative development</p>"},{"location":"git_and_github/#importing-a-git-repository-using-the-command-line","title":"Importing a Git repository using the command line","text":"<p>Importing a Git repository using the command line</p>"},{"location":"github/","title":"Github","text":"<p>GitHub is a Microsoft Distributed Version Control Systems product. It enabling multiple teams to work separately on the same project without having an impact on the work of others. GitHub manages an online web hosted Central Website Repository containing all project files. It is a unified source of truth. It helps teams collaborate and maintain the entire history of project file changes, and helps answer the questions who changed what, where, when, and why for the lifetime of the project</p>"},{"location":"github/#version-control","title":"Version Control","text":"<p>About version control and Git</p>"},{"location":"github/#github-references","title":"GitHub References","text":"<ul> <li> <p>How GitHub works</p> </li> <li> <p>GitHub Docs</p> </li> <li> <p>GitHub is free for teams</p> </li> <li> <p>Using GitHub To Be More Productive, Collaborative, And Secure</p> </li> </ul>"},{"location":"github/#github-flow","title":"GitHub Flow","text":"<p>GitHub flow is a lightweight, branch-based workflow. See GitHub Flow for details</p>"},{"location":"github_pull_request/","title":"GitHub Pull Request","text":"<p>Pull requests : PR , makes it easier for developers to collaborate. They provide a web interface for discussing proposed changes before integrating them into the project repository.</p>"},{"location":"github_pull_request/#git-hub-account","title":"Git Hub Account","text":"<ul> <li>Create a GitHub account</li> <li>Fork : fork, project repo creating private project repo on GitHub</li> <li>Clone private project repo on GitHub to a local repo</li> <li>Add a unique local repo branch that identifies the feature and team member</li> </ul>"},{"location":"github_pull_request/#feature","title":"Feature","text":"<ul> <li>Begin documenting feature design</li> <li>Create a GitHub Hub pull requests until there is agreement on feature design</li> <li>keeping GitHub pull requests small and to the point iterate</li> </ul>"},{"location":"github_pull_request/#code","title":"Code","text":"<p>)</p>"},{"location":"github_pull_request/#git-hub-account_1","title":"Git Hub Account","text":"<ul> <li>Create a GitHub account</li> <li>Fork : fork, project repo creating private project repo on GitHub</li> <li>Clone private project repo on GitHub to a local repo</li> <li>Add a unique local repo branch that identifies the feature and team member</li> </ul>"},{"location":"github_pull_request/#feature_1","title":"Feature","text":"<ul> <li>Begin documenting feature design</li> <li>Create a GitHub Hub pull requests until there is agreement on feature design</li> <li>keeping GitHub pull requests small and to the point iterate</li> </ul>"},{"location":"github_pull_request/#code_1","title":"Code","text":""},{"location":"minimum_viable_product/","title":"Minimum viable product","text":"<p>The first goal of website development projects is a Minimum Viable Product.</p> <p>It is a way of understand whether the website project idea will work or not. It is a stage in website development where the Must features are implemented and ready to test with end-users. It gives feedback about the positive aspects and shortcomings.</p> <p>The next steps are adding the Want features, until Stakeholders agree the website is production quality and ready to be deployed.</p>"},{"location":"overview/","title":"Overview","text":"<p>This website discusses optimizing website development costs over the life time of project using Iterative Web Development technology .</p> <p>The principle of Iterative Website Development is to develop websites through repeated cycles (iterative) and in smaller portions at a time (incremental), enabling iterative development teams to independently take advantage of what was learned during development of earlier features or versions of the system.</p>"},{"location":"overview/#iterate-web-development","title":"Iterate Web Development","text":"<p>Creating and maintaining websites that meet users needs are, complex, difficult, time consuming and expensive.</p> <p>Iterative web development teams working together help optimizing website costs and lowering the difficulties creating websites.</p> <p>This is done by all team members working on website features, fixes, or testing at the same time. Team members can deploy private Preview Internet websites with their changes, without disturbing other team members work or the website production version. This enabling stakeholders to monitor progress and quickly give feedback, speeding up the development process. This greatly simplifies traditional software reviews.</p>"},{"location":"overview/#defect-remediation-costs","title":"Defect Remediation Costs","text":"<p>Warning</p> <p>The slightest content or software errors during website creation will require  Remediation sometime during the life time of the website. The highest cost over the life time of website projects is remediating defects. Content and software defects cost less when found early.</p>"},{"location":"overviewQ/","title":"Overview","text":"<p>This website discusses optimizing website development costs over the life time of project using Iterative Web Development technology .</p> <p>The principle of Iterative Website Development is to develop websites through repeated cycles (iterative) and in smaller portions at a time (incremental), enabling iterative development teams to independently take advantage of what was learned during development of earlier features or versions of the system.</p>"},{"location":"overviewQ/#iterate-web-development","title":"Iterate Web Development","text":"<p>Creating and maintaining websites that meet users needs are, complex, difficult, time consuming and expensive.</p> <p>Iterative web development teams working together help optimizing website costs and lowering the difficulties creating websites.</p> <p>This is done by all team members working on website features, fixes, or testing at the same time. Team members can deploy private Preview Internet websites with their changes, without disturbing other team members work or the website production version. This enabling stakeholders to monitor progress and quickly give feedback, speeding up the development process. This greatly simplifies traditional software reviews.</p>"},{"location":"overviewQ/#defect-remediation-costs","title":"Defect Remediation Costs","text":"<p>:Danger: The slightest errors during website development will require Defect Remediation sometime during the life time of the website. The highest cost over the life time of website projects is remediating defects. Content and software defects cost less when found early.</p>"},{"location":"preview/","title":"Preview","text":""},{"location":"preview/#private-preview-website","title":"Private Preview Website","text":"<p>Each team member has a GitHub account and has cloned a copy fo the Central Project Repository to their workstation</p> <p>Changes made to the local cloned repositories cannot directly affect the Central Project Repository. It is managed by a gatekeeper team member. It requires a Pull Request Review This helps maintain a unified source of truth for project history and files.</p> <p>Team members can create a Preview Website on their workstation created when team members makes changes to their Local Website Repository. They may deploy a Private Preview Website for themselves and Stakeholders to quickly view and give feedback. </p> <p>Private Preview Website created by a Content Delivery Network. </p> <p>When team members and Stakeholders agree  changes are ready to be added to the Production Website,  team members  makes a GitHub Send Pull Request</p> <p>The repository guardian and other team members evaluating Central Website Repository Pull Requests, may deploy a Private Preview Website for Stakeholders holders to preview and give feedback.</p>"},{"location":"preview/#repository-guardian-preview","title":"Repository Guardian Preview","text":"<p>When the repository guardian and other team members evaluating Central Website Repository update requests changes are ready for deployment, the repository guardian deploys the updated production version of the website to a Private Preview Website for Stakeholders to preview and give feedback. When the Stakeholders are satisfied with the updated preview production version, the repository guardian deploys the updated production version of the website to the Internet</p>"},{"location":"programming%20_languages/","title":"Programming  languages","text":""},{"location":"programming%20_languages/#website-programming-language-troika","title":"Website Programming Language Troika","text":"<p>The website programming language troika is a team of three web website programming languages that have become standard for creating web pages, HTML, CSS, and JavaScript.  They are interpreted  by web browsers to rendering website pages.</p> <p>The job of website development frameworks is to compile the troika and non troika programming languages, such as Markdown, into a combination the standard troika languages to be executed in web browsers.</p>"},{"location":"programming%20_languages/#markdown","title":"Markdown","text":"<p>The The Markdown Guide explains how to use Markdown, the simple and easy-to-use markup language you can use to format virtually any document, not just website files.</p> <p>Markdown is the programming language [MkDocs](mkdocs.md) uses for creating websites, not the standard browser HTML,CSS, and JavaScript languages. These programming languages are strict foreign language requiring developers to know the languages and are able to use them. Markdown is written using spoken languages</p>    ![Markdown](/img/markdownlogo.png){ width=\"300\" } Markdown <p>Markdown can be used for everything. People use it to create websites, documents, notes, books, presentations, email messages, and technical documentation.</p> <p>Markdown is portable. Files containing Markdown-formatted text can be opened using virtually any application. </p> <p>Markdown is platform independent</p> <p>Markdown's syntax is comprised entirely of punctuation characters</p> <p>Markdown-formatted text can be created on any device running any operating system</p> <p>HTML can be embedded in Markdown. There's no need to preface it or delimit it to indicate that you're switching from Markdown to HTML</p> <p>Material for MkDocs has configuration options to support CCS and JavaScript.</p> <p>HTML can be embedded in Markdown. There's no need to preface it or delimit it to indicate that you're switching from Markdown to HTML.  Mkdocs also has configuration options to support CCS and JavaScript.</p> <p>Using Markdown is different then using a word processing editor. In an application like Microsoft Word, you click buttons to format words and phrases, and the changes are visible immediately. Markdown isn\u2019t like that. </p> <p>This website files are written in Markdown. Adding Markdown syntax to them produces the formatted text you are reading. The website files with Markdown syntax are readable by themselves, unlike word processing.</p> <p>Markdown\u2019s syntax uses punctuation characters, which have been carefully chosen to look like what they mean. For example, asterisks around the word <code>*emphasis*</code>  looks  emphasis. Double asterisks around the word <code>**bold**</code> looks   bold.</p> <p>Markdown is intended to be as easy-to-read and easy-to-write. Readability is emphasized. A Markdown-formatted document can be publishable as plain text</p> <p>The compiling process can also be done by a Content Delivery Network using Mkdocs to compile the Markdown files and places them on an internal MkDocs web server. The Content Delivery Network deploys the MkDocs web server to the Internet.</p> <p>What the developer sees on the workstation is exactly what the Content Delivery Network delivers to the Internet.</p> <p>Configuring the Content Delivery Network enables developers to frequently deploy their work to Private Private Preview Websites website for Stakeholders, interested parties, and other Teams to see their work and provide feedback.</p>"},{"location":"remediation/","title":"remediation.md","text":"<p>Defects</p> <p>The slightest configuration, programming or security defect issues during the project will require Remediating and increasing overall lifetime costs </p>"},{"location":"team_define/","title":"Team - Define","text":"<p>Defining websites helps the Iterative Development teams and Stakeholders understand the project.</p>"},{"location":"team_define/#define-prerequisites","title":"Define - Prerequisites","text":"<p>Defining website prerequisites is the first steps in optimizing website costs</p> <ul> <li> <p>Defining what the project is about</p> </li> <li> <p>Funding</p> </li> <li> <p>Purpose</p> </li> <li> <p>Functionality</p> </li> <li> <p>Stakeholders</p> </li> <li> <p>Content</p> </li> <li> <p>The Must and Want features</p> </li> <li> <p>Security requirements</p> </li> </ul>"},{"location":"team_deploy/","title":"Team - Deploy","text":"<ul> <li> <p>Deploying a website is making it available on the Internet. The production version is deployed when Stakeholders agree.</p> </li> <li> <p>Developers working on features, fixes, or testing may deploy a Private Preview Website with their changes, without disturbing other developers work or the production version. This enables the Stakeholders to monitor progress. See Private Preview Website Deployments</p> </li> <li> <p>The slightest errors or security issues during Deploy will require Remediating sometime during the life time of the website</p> </li> </ul>"},{"location":"team_deploy/#deploy-prerequisites","title":"Deploy - Prerequisites","text":"<ul> <li> <p>Decisions about resources required for deploying production version of the website to the Internet</p> </li> <li> <p>Decisions about resources required for team developers working on features, fixes, or testing to deploy Private Preview Website websites with their changes, for Stakeholders holders to view and give feedback, without disturbing other developers work or the production version</p> </li> </ul>"},{"location":"team_design/","title":"Mindnode","text":""},{"location":"team_design/#design-team-documents","title":"Design Team Documents","text":""},{"location":"team_design/#prerequisites","title":"Prerequisites","text":"<ul> <li>Decisions about Website Design</li> <li>Consistency</li> <li>Theme</li> <li>Color Scheme</li> <li>Typology</li> <li>Navigation</li> </ul>"},{"location":"team_design/#user-interaction","title":"User Interaction","text":"<ul> <li>The core foundations of a user's website experience are:</li> <li>Fast - Website responds quickly to user interactions with smooth scrolling.</li> <li>Integrated - The website uses the full capabilities of the user device to create an experience true to the device.</li> <li>The website uses the full capabilities of the user device to create an experience true to the device</li> <li>Reliable - Loads quickly and reliably even in uncertain network conditions.</li> <li>Engaging - Keeps user coming back to a website</li> </ul>"},{"location":"team_design/#original","title":"Original","text":"<p>The core foundations of a user's website experience are:</p> <ul> <li> <p>Fast - Website responds quickly to user interactions with smooth scrolling.</p> </li> <li> <p>Integrated - The website uses the full capabilities of the user device to create an experience true to the device.</p> </li> <li> <p>Reliable - Loads quickly and reliably even in uncertain network conditions.</p> </li> <li> <p>Engaging - Keeps user coming back to a website</p> </li> </ul>"},{"location":"team_design/#design-prerequisites","title":"Design - Prerequisites","text":"<ul> <li> <p>Decisions about Website Design</p> </li> <li> <p>Consistency</p> </li> <li> <p>Theme</p> </li> <li> <p>Color Scheme</p> </li> <li> <p>Typology</p> </li> <li> <p>Navigation</p> </li> <li> <p>User interaction</p> </li> </ul>"},{"location":"team_design/#design-website","title":"Design - Website","text":"<ul> <li> <p>Responsive Website Design</p> <p>The majority of users access websites using mobile devices. Users have little tolerance for slow loading website pages or pages that do not conform to their screen size</p> </li> <li> <p>Ensures pages load quickly</p> </li> <li> <p>Website pages are display correctly on a variety of devices and window or screen size</p> </li> <li> <p>The website look and feel, users experience, and functionality are consistently maintain</p> </li> <li> <p>Consistency website consistency is the look and feel of the site. The users experience, and functionality does not vary between website pages.</p> </li> <li> <p>The website theme is:</p> <ul> <li> <p>Color scheme</p> </li> <li> <p>Header</p> </li> <li> <p>Pages</p> </li> <li> <p>Fonts</p> </li> <li> <p>Footer</p> </li> <li> <p>Typology</p> </li> <li> <p>Navigation</p> </li> <li> <p>User interaction</p> </li> </ul> </li> </ul>"},{"location":"team_develop/","title":"Team - Develop","text":"<ul> <li> <p>Translates the Define and Design teams processes into website pages </p> </li> <li> <p>Uses development languages to create website material such as text, graphics, and abstract logical structures. These languages are nonhuman, and strict </p> </li> <li> <p>Configures and uses website development tools</p> </li> </ul>"},{"location":"team_develop/#develop-prerequisites","title":"Develop - Prerequisites","text":"<ul> <li> <p>Decisions about resources required to transform the Define and Design work into a website and infrastructure</p> </li> <li> <p>Decisions about static site generator and programming tools</p> <p>The slightest configuration, programming or security defect issues during the project will require Remediating and increasing overall lifetime costs </p> </li> </ul>"},{"location":"team_maintenance/","title":"Team Maintenance","text":"<ul> <li> <p>Maintain is remediating Define, Design,Develop, Deploy, or Security defects</p> </li> <li> <p>All teams may have members on the Maintain team to solve defects.</p> </li> <li> <p>Hot fixes are immediate fixes required for the production deployment.</p> </li> <li> <p>Problems requiring remediation are triaged. They are ranked from immediate Hot Fixes to those that are not show stoppers.</p> </li> <li> <p>The guardian and Stakeholders may choose to Rollback the production deployment to a previous production deployment if triage determines the remediation time is unacceptable.</p> </li> <li> <p>All fixes use the established fork, solution development, pull request processes, and version incrementing, including Hot Fixes.</p> </li> </ul>"},{"location":"team_maintenance/#maintenance-prerequisites","title":"Maintenance - Prerequisites","text":"<ul> <li> <p>Decisions about remediating deployed websites</p> </li> <li> <p>Organizing members from other teams to be part of the Maintain team while remediating specific defects.</p> </li> </ul> <p>Defects</p> <p>Content and software defects cost less when found early. The slightest errors  will require Defect Remediation sometime during the life time of the website. The highest cost over the life time of website projects is remediating defects. </p>"},{"location":"team_overview/","title":"Team Overview","text":""},{"location":"team_overview/#overview","title":"Overview","text":"<p>Iterative website Define, Design, Develop, Deploy and Maintenance teams may be operational at the same time creating, testing, and helping with maintenance  </p> <pre><code>    graph TD\n    dev --- def\n    dev --- des\n    dev --- dep\n    dev --- mnt\n    def --- des\n    dep --- mnt\n    dev --- tst\n\n    dev([Development])\n    def([Define])\n    des([Design])\n    dep([Deploy])\n    mnt([Maintenance])\n    tst([Testing])</code></pre> <p>Reaching a Minimum Viable Product is the first Development teams goal</p> <ul> <li> <p>Team Define    Defining websites helps the Iterative Development teams and Stakeholders to understand the project.</p> </li> <li> <p>Team Design   Determines the core foundations of a user's website experience are:</p> </li> <li> <p>Team Develop   Translates the Define and Design teams processes into website pages </p> </li> <li> <p>Team Deploy   Deploys the website making it available on the Internet. The production version is deployed when Stakeholders agree.</p> </li> <li> <p>Team Maintenance   Remediates the Define, Design, Develop, Deploy, or Security teams defects</p> </li> </ul>"},{"location":"tech_docs/","title":"Technology Documents","text":"<p>Technology Documents haves 2 links:</p> <ul> <li>Website </li> <li>Web searches are done by perplexity.ai</li> </ul>"},{"location":"tech_docs/#git-pull-request","title":"Git Pull Request","text":"<p>Creating a pull request from a fork</p> <p>Web Search</p>"},{"location":"tech_docs/#markdown","title":"Markdown","text":"<p>Markdown Guide</p> <p>Web Search</p>"},{"location":"tech_docs/#material-for-mkdocs","title":"Material for Mkdocs","text":"<p>Material for Mkdocs</p> <p>Web Search</p> <p>Python : language : Web Search(https://www.perplexity.ai/search/python-ELqu42nFSD2vJRUkGcLT3w)</p>"},{"location":"tech_docs/#visual-studio-code","title":"Visual Studio Code","text":"<p>VSVisual Studio CodeCode</p> <p>Web Search</p>"},{"location":"tech_ref/","title":"Technology Reference","text":"<ul> <li>Apple M1</li> <li>Apple</li> <li>ARM-based</li> <li>AsciiDoctor</li> <li>CSS</li> <li>CommonMark Spec</li> <li>CommonMark</li> <li>Cargo Book</li> <li>ChronoSync</li> <li>Docusaurus</li> <li>Docutils</li> <li>EagleFiler</li> <li>Git</li> <li>GitHub</li> <li>HTML</li> <li>iA Writer</li> <li>Jamstack</li> <li>JavaScript</li> <li>JohnTelford.com</li> <li>JSX</li> <li>Linux</li> <li>Markdown</li> <li>mdBook</li> <li>MDX</li> <li>MDX Deck</li> <li>Microsoft</li> <li>Netlify CLI Command</li> <li>Netlify</li> <li>Node</li> <li>React</li> <li>React JSX</li> <li>Site Generators</li> <li>Static Site Generator</li> <li>Tailwindcss Utility CSS Classes</li> <li>Tailwindcss Typography</li> <li>Taio</li> <li>Templates</li> <li>Vercel</li> <li>Visual Studio Code</li> <li>Visual Studio Code Extension</li> <li>[Web.dev][def]</li> </ul>"},{"location":"version_control/","title":"Version control","text":""},{"location":"version_control/#version-control","title":"Version Control","text":"<p>Version control is the primary technology for Iterative Development</p> <ul> <li> <p>It enables multiple teams to work separately on the same project without having an impact on the work of others</p> </li> <li> <p>Private Preview Website are deployed to allow stakeholders to monitor progress and provide feedback</p> </li> <li> <p>Version control is handled by Git and [GitHub](github.md)</p> </li> </ul>"},{"location":"version_control/#git","title":"Git","text":"<p>Git is a popular Distributed Version Control System (DVCS) that tracks changes in software projects and provides a unified view of project history. Developers can see the entire timeline of changes. Each developer has a full copy of the project and maintains source code integrity through branches. Git enables businesses to leverage collaboration and align experts. </p> <p>Git repositories help teams build the best product because they enable collaboration between all team members </p>"},{"location":"version_control/#github","title":"GitHub","text":"<p>GitHub is a platform that hosts Git repositories and offers tools for better code development, collaboration, and integration with other apps. It's useful for organizing work through repositories and facilitating collaboration through the GitHub flow: </p> <ul> <li>Create Branch </li> <li>Commit</li> <li>Changes</li> <li>Open Pull Request</li> <li>Merge</li> </ul> <p>Microsoft GitHub is a Distributed Version Control Systems  product. GitHub manages an online web hosted Central Website Repository containing all project files. It offers tools for better code development, collaboration, and integration with other apps. It is a unified source of truth. It helps teams collaborate and maintain the entire history of project file changes, and helps answer the questions who changed what, where, when, and why for the lifetime of the project</p>"},{"location":"version_control/#structure","title":"Structure","text":"<p>The structure of Git and GitHub is centered around repositories and branches. Repositories are the entire collection of files and folders associated with a project and their revision history, represented as snapshots called commits. Branches in Git allow organizations of different lines of development, allowing developers to safely propose changes to the production code.</p> <p>GitHub provides tools for collaboration, hosting Git repositories and offering features such as issues, pull requests, code review and integration with other apps to improve the software development process. With the GitHub flow, work is organized into repositories where developers can outline requirements and create branches for work on updates, before committing changes, opening a pull request, discussing and then merging changes, along with 15 million other developers worldwide.</p>"},{"location":"vscode/","title":"Vscode","text":"<p>Visual Studio Code (VScode) is a Microsoft product and commonly referred to as VScode. It is a code editor redefined and optimized for building and debugging modern software projects. VCcode is free and available on  Linux, macOS, and Windows platforms. Developer surveys show VScode is ranked the most popular developer environment tool </p> <p>Features include support for debugging, syntax highlighting, intelligent code completion, snippets, code refactoring, and embedded git</p>"},{"location":"vscode/#git","title":"Git","text":"<p>Use Git version-control tools in Visual Studio Code</p> <p>Utilize the tight integration of Visual Studio Code with the Git source-control management system.</p> <p>Perform common GitHub tasks by using the Command Palette in Visual Studio.</p> <p>Monitor  status </p> <p>Committing  files to the developers \"Local Project Repository\"</p> <p>VScode is the Command And Control center for the project development stack.</p> <p>The development Command And Control tasks are:</p> <ul> <li>Editing Markdown  programming materials</li> <li>Use git and GitHub commands to manage project files. Git is built-in and optimized to work with Microsoft GitHub</li> <li>Some VScode extensions continually check for syntax and other errors</li> <li>Live edit browser previews show how edits will looks on a web page</li> <li>Built-in command shell</li> <li> <p>Run Mkdocs to create a local workstation website</p> </li> <li> <p>Use the Built-in command shell to create Private Preview Website to the Internet using  for Stakeholders</p> </li> <li>Deploy production website to the Internet</li> <li>And much more</li> </ul>"},{"location":"vscode/#extensions","title":"Extensions","text":"<p>Some useful extensions available at the VScode Marketplace are:</p> <ul> <li> <p>Git Graph View a Git Graph of your repository, and easily perform Git actions from the graph</p> </li> <li> <p>Dark+ Material. The default Dark+ theme, using Material's color palette</p> </li> <li> <p>GitHub Repositories. Remotely browse and edit any GitHub repository</p> </li> <li> <p>Lorem Text Generator Lorem text generator extension for VScode</p> </li> <li> <p>Markdown All in One All you need for Markdown (keyboard shortcuts, table of contents, auto preview and more)</p> </li> <li> <p>Rainbow Brackets Provide rainbow colors for the round brackets, the square brackets and the squiggly brackets</p> </li> <li> <p>Todo Tree This extension quickly searches the local repository workspace for comment tags like TODO and FIXME, and displays them in a tree view in the activity bar</p> </li> <li> <p>VScode-icons Icons for Visual Studio Code</p> </li> </ul>"},{"location":"vscode/#vscode-git-client","title":"VScode Git Client","text":"<p>Vscode built-in git commands :</p> <ul> <li>Review diffs</li> <li>Stage files</li> <li>Make commits</li> <li>Push </li> <li>pull</li> <li>and more</li> </ul>"},{"location":"vscode/#other-git-clients","title":"Other Git Clients","text":"<p>Alternatives to using built-in VScode <code>git</code> commands is to use the built in terminal or GitHub Desktop that abstract <code>gitHub</code> and with more <code>git</code> commands. It interacts with <code>GitHub</code> using a GUI instead of the command line or a web browser. </p> <p>Other Git GUI Clients</p>"},{"location":"vscode/#references","title":"References","text":"<ul> <li>Introduction Videos</li> </ul>"},{"location":"workstations/","title":"Workstations","text":"<p>Workstations are the key to website development productivity. </p> <p>Web site development is not easy, time consuming, and expensive. Optimizing the website development environment is critical.</p> <p>The key hardware for website developers are workstations that run the Developers Integrated Development Environment (IDE). They need to be:</p> <ul> <li>Fast</li> <li>Reliable</li> <li>Supportable</li> <li>Secure</li> <li>Support Large or Multiple Screens</li> <li>Run Software Development Applications</li> </ul> <p>The contemporary choice for web development workstations are Apple, Linux, and Microsoft. My experience building and maintaining web sites with purchased or bare metal built Linux or Microsoft systems, was my reason choosing Apple products for exploring Internet technologies and creating web sites.</p> <p>Traditionally these companies built workstation products with Intel processors. They are diversifying their product line with ARM-based and RISC-architecture processors</p>"},{"location":"workstations/#apple","title":"Apple","text":"<p>Apple is a computer manufacturing company delivering workstation products with Apple developed macOS certified UNIX operating systems.</p> <p>Apple has released Mac products built with the ARM-based, M3 Apple silicon designed system on a chip containing 20 billion transistors, solid-state drive, and optimized the Mac operating system. The system on a chip means there are no mother board plugins, memory, or solid-state drive upgrades,  possible. The configuration is chosen at purchase time.</p> <p>Apple products prices may be higher than their competitors. It is mitigated by the  robustness, reliability, security, speed, vendor hardware and software support, and relative ease of use.</p> <p>Any web developer workstation downtime is expensive. Apple has responsibility for maintaining their hardware and software products from sale to retirement. Apple Stores and other services are equipped to diagnose and repair Apple products using some of the same test equipment used my Apple manufacturing.</p> <p>Operating systems updates have been free for years, and work when applied. </p> <p>Apple continues to have the highest customer satisfaction in the industry.</p>"},{"location":"workstations/#linux","title":"Linux","text":"<p>Linux is an examples of free and open-source software collaboration. The source code may be used, modified and distributed commercially or non-commercially by anyone under the terms of its respective licenses</p> <p>Linux is the leading operating system on web servers. Its greatest success in the consumer market is mobile device. Android being one of the dominant smartphones Linux-based operating system</p> <p>There are a some Linux vendor supporting hardware platforms or Linux software distributions. The diversity of Linux distributions means that not all software or hardware runs all distributions or applications. Software and hardware repositories may be specific to particular distributions</p> <p>Not all peripheral device vendors support Linux. The Linux open-source community supplies several missing device drivers.</p> <p>The price of Linux-based systems is attractive. The operating system software is free. Ready-made hardware platforms are available, or can be bare metal built by choosing hardware and software components, and having the skills to assemble and maintain them.</p> <p>The robustness, reliability, security, and speed of Linux systems varies from high to low, depending on the knowledge and skills of the vendors, builders and maintainers</p> <p>Responsibility for maintaining Linux workstation hardware, operating systems, and device drivers is fragmented or doesn't exist, except from some vendors, builders and maintainers</p> <p>There are computer repair services that are equipped to diagnosed and repaired Linux systems, but not to the extent of Apple Stores</p>"},{"location":"workstations/#microsoft","title":"Microsoft","text":"<p>Microsoft is the creators of the  Windows operating. Many companies sell systems with Windows installed, and many peripheral device vendors support Windows drivers.</p> <p>Consumer versions of Windows were originally designed for ease-of-use on a single-user PC without a network connection, and did not have security features built in from the outset. Windows updates are regularly improving security.</p> <p>Windows is one of hackers prime data hunting grounds, even with frequent security updates. Windows systems are everywhere and stores or has access to vast amounts of data. There are Windows installations that do not keep Windows updated. One reason may be issues with updates. Some Microsoft Windows update problems have been legendary.</p> <p>The reliability, robustness, security, and supportability of Microsoft systems varies from high to low, depending on the knowledge and skills of vendors, builders and maintainers. The combinations and permutations of vendor hardware platforms, software applications, peripheral vendors and device support, may be contributing to some of Microsoft Windows update problems.</p> <p>There are computer repair services that are equipped to diagnosed and repaired Windows systems, but not to the extent of Apple Stores.</p>"},{"location":"taio/taio/","title":"Taio","text":"<p>Taio for Mac offers a range of features that enhance the saving and management of text and Markdown content. Here are the main aspects related to saving content in Taio:</p>"},{"location":"taio/taio/#1-markdown-editing-and-saving","title":"1. Markdown Editing and Saving","text":"<ul> <li> <p>Full Markdown Support: Taio supports CommonMark and GitHub Flavored Markdown, allowing users to create and save documents in a widely accepted format. This ensures compatibility with other Markdown editors and platforms.</p> </li> <li> <p>Dynamic Snippets: Users can save frequently used text as snippets, which can be easily inserted into documents. This feature streamlines the writing process and helps maintain consistency across notes.</p> </li> </ul>"},{"location":"taio/taio/#2-clipboard-management","title":"2. Clipboard Management","text":"<ul> <li> <p>Multi-Clipboard Functionality: Taio allows users to capture and save multiple clipboard entries. This multi-clipboard feature enables quick access to previously copied text, making it easier to reuse information without needing to re-copy it.</p> </li> <li> <p>iCloud Synchronization: Saved records and snippets can be synchronized across devices using iCloud. This ensures that users have access to their saved content on both Mac and iOS devices, enhancing workflow continuity.</p> </li> </ul>"},{"location":"taio/taio/#3-file-management-and-exporting","title":"3. File Management and Exporting","text":"<ul> <li> <p>Open File System: Taio provides an open file system that can be accessed by other applications, allowing users to manage their documents flexibly. This feature supports the organization of files and easy retrieval.</p> </li> <li> <p>Export Options: Taio offers various export formats, including Markdown, PDF, HTML, DOCX, RTF, and web archive. Users can easily save their documents in different formats depending on their needs, facilitating sharing and publication.</p> </li> </ul>"},{"location":"taio/taio/#4-custom-workflows-and-actions","title":"4. Custom Workflows and Actions","text":"<ul> <li> <p>Text Actions: Taio includes a powerful text actions feature that allows users to create custom workflows for saving and processing text. This functionality is similar to the Shortcuts app and enables users to automate repetitive tasks.</p> </li> <li> <p>JavaScript Integration: For advanced users, Taio allows the creation of action blocks using JavaScript, providing extensibility for both clipboard and editor functionalities.</p> </li> </ul>"},{"location":"taio/taio/#conclusion","title":"Conclusion","text":"<p>Overall, Taio's strengths in saving content lie in its robust Markdown support, efficient clipboard management, flexible file handling, and customizable workflows. These features make it a powerful tool for users looking to streamline their text processing and note-taking on Mac.</p> <p>Citations: [1] https://decrypt.day/app/id1527036273 [2] https://github.com/cyanzhong/taio.app/blob/master/index.html [3] https://apps.apple.com/us/app/taio-markdown-text-actions/id1527036273?l=es&amp;platform=iphone [4] https://visualsproducer.wordpress.com/2022/06/28/taio-is-an-elegant-commonmark-editor/ [5] https://beardyguycreative.com/blog/2021/04/28/experiments-with-markdown-editors-saving-content-and-obsidian/ [6] https://appraven.net/app/16206714 [7] https://www.reddit.com/r/ObsidianMD/comments/11bhgt4/im_looking_for_an_ios_markdown_app_for_obsidian/ [8] https://www.sitepoint.com/best-ios-markdown-editors/</p>"}]}